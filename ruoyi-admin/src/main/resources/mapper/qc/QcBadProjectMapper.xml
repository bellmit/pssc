<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saas.pssc.mapper.QcBadProjectMapper">
    
    <resultMap type="QcBadProject" id="QcBadProjectResult">
        <result property="id"    column="id"    />
        <result property="pcode"    column="pcode"    />
        <result property="pname"    column="pname"    />
        <result property="project"    column="project"    />
        <result property="lot"    column="lot"    />
        <result property="qty"    column="qty"    />
        <result property="remark"    column="remark"    />
        <result property="isValid"    column="is_valid"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="attribute1"    column="attribute1"    />
        <result property="attribute2"    column="attribute2"    />
        <result property="attribute3"    column="attribute3"    />
        <result property="name"    column="name"    />
        <result property="value"    column="value"    />
    </resultMap>

    <sql id="selectQcBadProjectVo">
        select id, pcode, pname, project, lot, qty, t.remark, t.is_valid, t.create_by, t.create_time, t.update_by, t.update_time, attribute1, attribute2, attribute3 
        from qc_bad_project  t left join sys_user su on t.create_by = su.login_name
    </sql>
    <sql id="selectQcBadProjectWhere">
        <where>  
            <if test="pcode != null  and pcode != ''"> and pcode = #{pcode}</if>
            <if test="pname != null  and pname != ''"> and pname like concat('%', #{pname}, '%')</if>
            <if test="lot != null  and lot != ''"> and lot = #{lot}</if>
            and is_valid = '1'  ${params.dataScope}
        </where>
    </sql>

    <select id="selectQcBadProjectList" parameterType="QcBadProject" resultMap="QcBadProjectResult">
        <include refid="selectQcBadProjectVo"/>
        <include refid="selectQcBadProjectWhere"/>
        order by t.create_time desc
    </select>
    
    <select id="selectQcBadProjectById" parameterType="Long" resultMap="QcBadProjectResult">
        <include refid="selectQcBadProjectVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertQcBadProject" parameterType="QcBadProject" useGeneratedKeys="true" keyProperty="id">
        insert into qc_bad_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pcode != null">pcode,</if>
            <if test="pname != null">pname,</if>
            <if test="project != null">project,</if>
            <if test="lot != null">lot,</if>
            <if test="qty != null">qty,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            create_time,
            <if test="updateBy != null">update_by,</if>
            update_time,
            <if test="attribute1 != null">attribute1,</if>
            <if test="attribute2 != null">attribute2,</if>
            <if test="attribute3 != null">attribute3,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pcode != null">#{pcode},</if>
            <if test="pname != null">#{pname},</if>
            <if test="project != null">#{project},</if>
            <if test="lot != null">#{lot},</if>
            <if test="qty != null">#{qty},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            sysdate(),
            <if test="updateBy != null">#{updateBy},</if>
            sysdate(),
            <if test="attribute1 != null">#{attribute1},</if>
            <if test="attribute2 != null">#{attribute2},</if>
            <if test="attribute3 != null">#{attribute3},</if>
         </trim>
    </insert>

    <update id="updateQcBadProject" parameterType="QcBadProject">
        update qc_bad_project
        <trim prefix="SET" suffixOverrides=",">
            <if test="pcode != null">pcode = #{pcode},</if>
            <if test="pname != null">pname = #{pname},</if>
            <if test="project != null">project = #{project},</if>
            <if test="lot != null">lot = #{lot},</if>
            <if test="qty != null">qty = #{qty},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="isValid != null">is_valid = #{isValid},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            update_time = sysdate(),
            <if test="attribute1 != null">attribute1 = #{attribute1},</if>
            <if test="attribute2 != null">attribute2 = #{attribute2},</if>
            <if test="attribute3 != null">attribute3 = #{attribute3},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateQcBadProjectById" parameterType="Long">
        update qc_bad_project set is_valid = '0' where id = #{id}
    </update>

    <update id="updateQcBadProjectByIds" parameterType="String">
        update qc_bad_project set is_valid = '0' where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="deleteQcBadProjectById" parameterType="Long">
        delete from qc_bad_project where id = #{id}
    </delete>

    <delete id="deleteQcBadProjectByIds" parameterType="String">
        delete from qc_bad_project where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getPieChartByProject" parameterType="QcBadProject" resultMap="QcBadProjectResult">
        select project as name,sum(qty) as value 
        from qc_bad_project t left join sys_user su on t.create_by = su.login_name
        <include refid="selectQcBadProjectWhere"/>
        group by project
        order by sum(qty) desc
        limit 5
    </select>
    <select id="getPieChartByPname" parameterType="QcBadProject" resultMap="QcBadProjectResult">
        select pname as name,sum(qty) as value 
        from qc_bad_project t left join sys_user su on t.create_by = su.login_name
        <include refid="selectQcBadProjectWhere"/>
        group by pname
        order by sum(qty) desc
        limit 5
    </select>

</mapper>